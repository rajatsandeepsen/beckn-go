/*
Beckn Protocol Meta API

This document contains all the meta API endpoints that are implemented by the network participants. The information returned from these endpoints typically contain cacheable information.

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meta

import (
	"encoding/json"
)

// checks if the InlineObjectMessageAck type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InlineObjectMessageAck{}

// InlineObjectMessageAck struct for InlineObjectMessageAck
type InlineObjectMessageAck struct {
	Status *string `json:"status,omitempty"`
	// A list of tags containing any additional information sent along with the Acknowledgement.
	Tags []TagGroup `json:"tags,omitempty"`
}

// NewInlineObjectMessageAck instantiates a new InlineObjectMessageAck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObjectMessageAck() *InlineObjectMessageAck {
	this := InlineObjectMessageAck{}
	return &this
}

// NewInlineObjectMessageAckWithDefaults instantiates a new InlineObjectMessageAck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObjectMessageAckWithDefaults() *InlineObjectMessageAck {
	this := InlineObjectMessageAck{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineObjectMessageAck) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObjectMessageAck) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineObjectMessageAck) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineObjectMessageAck) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InlineObjectMessageAck) GetTags() []TagGroup {
	if o == nil || IsNil(o.Tags) {
		var ret []TagGroup
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObjectMessageAck) GetTagsOk() ([]TagGroup, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InlineObjectMessageAck) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagGroup and assigns it to the Tags field.
func (o *InlineObjectMessageAck) SetTags(v []TagGroup) {
	o.Tags = v
}

func (o InlineObjectMessageAck) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InlineObjectMessageAck) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableInlineObjectMessageAck struct {
	value *InlineObjectMessageAck
	isSet bool
}

func (v NullableInlineObjectMessageAck) Get() *InlineObjectMessageAck {
	return v.value
}

func (v *NullableInlineObjectMessageAck) Set(val *InlineObjectMessageAck) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObjectMessageAck) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObjectMessageAck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObjectMessageAck(val *InlineObjectMessageAck) *NullableInlineObjectMessageAck {
	return &NullableInlineObjectMessageAck{value: val, isSet: true}
}

func (v NullableInlineObjectMessageAck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObjectMessageAck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


