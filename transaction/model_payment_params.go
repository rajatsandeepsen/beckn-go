/*
Beckn Protocol Core

Beckn Core Transaction API specification

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package transaction

import (
	"encoding/json"
)

// checks if the PaymentParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentParams{}

// PaymentParams struct for PaymentParams
type PaymentParams struct {
	// The reference transaction ID associated with a payment activity
	TransactionId *string `json:"transaction_id,omitempty"`
	Amount *string `json:"amount,omitempty"`
	Currency *string `json:"currency,omitempty"`
	BankCode *string `json:"bank_code,omitempty"`
	BankAccountNumber *string `json:"bank_account_number,omitempty"`
	VirtualPaymentAddress *string `json:"virtual_payment_address,omitempty"`
	SourceBankCode *string `json:"source_bank_code,omitempty"`
	SourceBankAccountNumber *string `json:"source_bank_account_number,omitempty"`
	SourceVirtualPaymentAddress *string `json:"source_virtual_payment_address,omitempty"`
}

// NewPaymentParams instantiates a new PaymentParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentParams() *PaymentParams {
	this := PaymentParams{}
	return &this
}

// NewPaymentParamsWithDefaults instantiates a new PaymentParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentParamsWithDefaults() *PaymentParams {
	this := PaymentParams{}
	return &this
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *PaymentParams) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentParams) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *PaymentParams) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *PaymentParams) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PaymentParams) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentParams) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PaymentParams) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *PaymentParams) SetAmount(v string) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PaymentParams) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentParams) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PaymentParams) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *PaymentParams) SetCurrency(v string) {
	o.Currency = &v
}

// GetBankCode returns the BankCode field value if set, zero value otherwise.
func (o *PaymentParams) GetBankCode() string {
	if o == nil || IsNil(o.BankCode) {
		var ret string
		return ret
	}
	return *o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentParams) GetBankCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BankCode) {
		return nil, false
	}
	return o.BankCode, true
}

// HasBankCode returns a boolean if a field has been set.
func (o *PaymentParams) HasBankCode() bool {
	if o != nil && !IsNil(o.BankCode) {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given string and assigns it to the BankCode field.
func (o *PaymentParams) SetBankCode(v string) {
	o.BankCode = &v
}

// GetBankAccountNumber returns the BankAccountNumber field value if set, zero value otherwise.
func (o *PaymentParams) GetBankAccountNumber() string {
	if o == nil || IsNil(o.BankAccountNumber) {
		var ret string
		return ret
	}
	return *o.BankAccountNumber
}

// GetBankAccountNumberOk returns a tuple with the BankAccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentParams) GetBankAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.BankAccountNumber) {
		return nil, false
	}
	return o.BankAccountNumber, true
}

// HasBankAccountNumber returns a boolean if a field has been set.
func (o *PaymentParams) HasBankAccountNumber() bool {
	if o != nil && !IsNil(o.BankAccountNumber) {
		return true
	}

	return false
}

// SetBankAccountNumber gets a reference to the given string and assigns it to the BankAccountNumber field.
func (o *PaymentParams) SetBankAccountNumber(v string) {
	o.BankAccountNumber = &v
}

// GetVirtualPaymentAddress returns the VirtualPaymentAddress field value if set, zero value otherwise.
func (o *PaymentParams) GetVirtualPaymentAddress() string {
	if o == nil || IsNil(o.VirtualPaymentAddress) {
		var ret string
		return ret
	}
	return *o.VirtualPaymentAddress
}

// GetVirtualPaymentAddressOk returns a tuple with the VirtualPaymentAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentParams) GetVirtualPaymentAddressOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualPaymentAddress) {
		return nil, false
	}
	return o.VirtualPaymentAddress, true
}

// HasVirtualPaymentAddress returns a boolean if a field has been set.
func (o *PaymentParams) HasVirtualPaymentAddress() bool {
	if o != nil && !IsNil(o.VirtualPaymentAddress) {
		return true
	}

	return false
}

// SetVirtualPaymentAddress gets a reference to the given string and assigns it to the VirtualPaymentAddress field.
func (o *PaymentParams) SetVirtualPaymentAddress(v string) {
	o.VirtualPaymentAddress = &v
}

// GetSourceBankCode returns the SourceBankCode field value if set, zero value otherwise.
func (o *PaymentParams) GetSourceBankCode() string {
	if o == nil || IsNil(o.SourceBankCode) {
		var ret string
		return ret
	}
	return *o.SourceBankCode
}

// GetSourceBankCodeOk returns a tuple with the SourceBankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentParams) GetSourceBankCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceBankCode) {
		return nil, false
	}
	return o.SourceBankCode, true
}

// HasSourceBankCode returns a boolean if a field has been set.
func (o *PaymentParams) HasSourceBankCode() bool {
	if o != nil && !IsNil(o.SourceBankCode) {
		return true
	}

	return false
}

// SetSourceBankCode gets a reference to the given string and assigns it to the SourceBankCode field.
func (o *PaymentParams) SetSourceBankCode(v string) {
	o.SourceBankCode = &v
}

// GetSourceBankAccountNumber returns the SourceBankAccountNumber field value if set, zero value otherwise.
func (o *PaymentParams) GetSourceBankAccountNumber() string {
	if o == nil || IsNil(o.SourceBankAccountNumber) {
		var ret string
		return ret
	}
	return *o.SourceBankAccountNumber
}

// GetSourceBankAccountNumberOk returns a tuple with the SourceBankAccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentParams) GetSourceBankAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SourceBankAccountNumber) {
		return nil, false
	}
	return o.SourceBankAccountNumber, true
}

// HasSourceBankAccountNumber returns a boolean if a field has been set.
func (o *PaymentParams) HasSourceBankAccountNumber() bool {
	if o != nil && !IsNil(o.SourceBankAccountNumber) {
		return true
	}

	return false
}

// SetSourceBankAccountNumber gets a reference to the given string and assigns it to the SourceBankAccountNumber field.
func (o *PaymentParams) SetSourceBankAccountNumber(v string) {
	o.SourceBankAccountNumber = &v
}

// GetSourceVirtualPaymentAddress returns the SourceVirtualPaymentAddress field value if set, zero value otherwise.
func (o *PaymentParams) GetSourceVirtualPaymentAddress() string {
	if o == nil || IsNil(o.SourceVirtualPaymentAddress) {
		var ret string
		return ret
	}
	return *o.SourceVirtualPaymentAddress
}

// GetSourceVirtualPaymentAddressOk returns a tuple with the SourceVirtualPaymentAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentParams) GetSourceVirtualPaymentAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SourceVirtualPaymentAddress) {
		return nil, false
	}
	return o.SourceVirtualPaymentAddress, true
}

// HasSourceVirtualPaymentAddress returns a boolean if a field has been set.
func (o *PaymentParams) HasSourceVirtualPaymentAddress() bool {
	if o != nil && !IsNil(o.SourceVirtualPaymentAddress) {
		return true
	}

	return false
}

// SetSourceVirtualPaymentAddress gets a reference to the given string and assigns it to the SourceVirtualPaymentAddress field.
func (o *PaymentParams) SetSourceVirtualPaymentAddress(v string) {
	o.SourceVirtualPaymentAddress = &v
}

func (o PaymentParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransactionId) {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.BankCode) {
		toSerialize["bank_code"] = o.BankCode
	}
	if !IsNil(o.BankAccountNumber) {
		toSerialize["bank_account_number"] = o.BankAccountNumber
	}
	if !IsNil(o.VirtualPaymentAddress) {
		toSerialize["virtual_payment_address"] = o.VirtualPaymentAddress
	}
	if !IsNil(o.SourceBankCode) {
		toSerialize["source_bank_code"] = o.SourceBankCode
	}
	if !IsNil(o.SourceBankAccountNumber) {
		toSerialize["source_bank_account_number"] = o.SourceBankAccountNumber
	}
	if !IsNil(o.SourceVirtualPaymentAddress) {
		toSerialize["source_virtual_payment_address"] = o.SourceVirtualPaymentAddress
	}
	return toSerialize, nil
}

type NullablePaymentParams struct {
	value *PaymentParams
	isSet bool
}

func (v NullablePaymentParams) Get() *PaymentParams {
	return v.value
}

func (v *NullablePaymentParams) Set(val *PaymentParams) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentParams) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentParams(val *PaymentParams) *NullablePaymentParams {
	return &NullablePaymentParams{value: val, isSet: true}
}

func (v NullablePaymentParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


