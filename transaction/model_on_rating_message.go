/*
Beckn Protocol Core

Beckn Core Transaction API specification

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package transaction

import (
	"encoding/json"
)

// checks if the OnRatingMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnRatingMessage{}

// OnRatingMessage struct for OnRatingMessage
type OnRatingMessage struct {
	// A feedback form to allow the user to provide additional information on the rating provided
	FeedbackForm *XInput `json:"feedback_form,omitempty"`
}

// NewOnRatingMessage instantiates a new OnRatingMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnRatingMessage() *OnRatingMessage {
	this := OnRatingMessage{}
	return &this
}

// NewOnRatingMessageWithDefaults instantiates a new OnRatingMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnRatingMessageWithDefaults() *OnRatingMessage {
	this := OnRatingMessage{}
	return &this
}

// GetFeedbackForm returns the FeedbackForm field value if set, zero value otherwise.
func (o *OnRatingMessage) GetFeedbackForm() XInput {
	if o == nil || IsNil(o.FeedbackForm) {
		var ret XInput
		return ret
	}
	return *o.FeedbackForm
}

// GetFeedbackFormOk returns a tuple with the FeedbackForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnRatingMessage) GetFeedbackFormOk() (*XInput, bool) {
	if o == nil || IsNil(o.FeedbackForm) {
		return nil, false
	}
	return o.FeedbackForm, true
}

// HasFeedbackForm returns a boolean if a field has been set.
func (o *OnRatingMessage) HasFeedbackForm() bool {
	if o != nil && !IsNil(o.FeedbackForm) {
		return true
	}

	return false
}

// SetFeedbackForm gets a reference to the given XInput and assigns it to the FeedbackForm field.
func (o *OnRatingMessage) SetFeedbackForm(v XInput) {
	o.FeedbackForm = &v
}

func (o OnRatingMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnRatingMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FeedbackForm) {
		toSerialize["feedback_form"] = o.FeedbackForm
	}
	return toSerialize, nil
}

type NullableOnRatingMessage struct {
	value *OnRatingMessage
	isSet bool
}

func (v NullableOnRatingMessage) Get() *OnRatingMessage {
	return v.value
}

func (v *NullableOnRatingMessage) Set(val *OnRatingMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableOnRatingMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableOnRatingMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnRatingMessage(val *OnRatingMessage) *NullableOnRatingMessage {
	return &NullableOnRatingMessage{value: val, isSet: true}
}

func (v NullableOnRatingMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnRatingMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


