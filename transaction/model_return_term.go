/*
Beckn Protocol Core

Beckn Core Transaction API specification

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package transaction

import (
	"encoding/json"
)

// checks if the ReturnTerm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReturnTerm{}

// ReturnTerm Describes the return policy of an item or an order
type ReturnTerm struct {
	// The state of fulfillment during which this term IETF''s applicable.
	FulfillmentState *State `json:"fulfillment_state,omitempty"`
	// Indicates whether the item is eligible for return
	ReturnEligible *bool `json:"return_eligible,omitempty"`
	// Applicable only for buyer managed returns where the buyer has to return the item to the origin before a certain date-time, failing which they will not be eligible for refund.
	ReturnTime *Time `json:"return_time,omitempty"`
	// The location where the item or order must / will be returned to
	ReturnLocation *Location `json:"return_location,omitempty"`
	// The entity that will perform the return
	FulfillmentManagedBy *string `json:"fulfillment_managed_by,omitempty"`
}

// NewReturnTerm instantiates a new ReturnTerm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnTerm() *ReturnTerm {
	this := ReturnTerm{}
	return &this
}

// NewReturnTermWithDefaults instantiates a new ReturnTerm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnTermWithDefaults() *ReturnTerm {
	this := ReturnTerm{}
	return &this
}

// GetFulfillmentState returns the FulfillmentState field value if set, zero value otherwise.
func (o *ReturnTerm) GetFulfillmentState() State {
	if o == nil || IsNil(o.FulfillmentState) {
		var ret State
		return ret
	}
	return *o.FulfillmentState
}

// GetFulfillmentStateOk returns a tuple with the FulfillmentState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnTerm) GetFulfillmentStateOk() (*State, bool) {
	if o == nil || IsNil(o.FulfillmentState) {
		return nil, false
	}
	return o.FulfillmentState, true
}

// HasFulfillmentState returns a boolean if a field has been set.
func (o *ReturnTerm) HasFulfillmentState() bool {
	if o != nil && !IsNil(o.FulfillmentState) {
		return true
	}

	return false
}

// SetFulfillmentState gets a reference to the given State and assigns it to the FulfillmentState field.
func (o *ReturnTerm) SetFulfillmentState(v State) {
	o.FulfillmentState = &v
}

// GetReturnEligible returns the ReturnEligible field value if set, zero value otherwise.
func (o *ReturnTerm) GetReturnEligible() bool {
	if o == nil || IsNil(o.ReturnEligible) {
		var ret bool
		return ret
	}
	return *o.ReturnEligible
}

// GetReturnEligibleOk returns a tuple with the ReturnEligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnTerm) GetReturnEligibleOk() (*bool, bool) {
	if o == nil || IsNil(o.ReturnEligible) {
		return nil, false
	}
	return o.ReturnEligible, true
}

// HasReturnEligible returns a boolean if a field has been set.
func (o *ReturnTerm) HasReturnEligible() bool {
	if o != nil && !IsNil(o.ReturnEligible) {
		return true
	}

	return false
}

// SetReturnEligible gets a reference to the given bool and assigns it to the ReturnEligible field.
func (o *ReturnTerm) SetReturnEligible(v bool) {
	o.ReturnEligible = &v
}

// GetReturnTime returns the ReturnTime field value if set, zero value otherwise.
func (o *ReturnTerm) GetReturnTime() Time {
	if o == nil || IsNil(o.ReturnTime) {
		var ret Time
		return ret
	}
	return *o.ReturnTime
}

// GetReturnTimeOk returns a tuple with the ReturnTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnTerm) GetReturnTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.ReturnTime) {
		return nil, false
	}
	return o.ReturnTime, true
}

// HasReturnTime returns a boolean if a field has been set.
func (o *ReturnTerm) HasReturnTime() bool {
	if o != nil && !IsNil(o.ReturnTime) {
		return true
	}

	return false
}

// SetReturnTime gets a reference to the given Time and assigns it to the ReturnTime field.
func (o *ReturnTerm) SetReturnTime(v Time) {
	o.ReturnTime = &v
}

// GetReturnLocation returns the ReturnLocation field value if set, zero value otherwise.
func (o *ReturnTerm) GetReturnLocation() Location {
	if o == nil || IsNil(o.ReturnLocation) {
		var ret Location
		return ret
	}
	return *o.ReturnLocation
}

// GetReturnLocationOk returns a tuple with the ReturnLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnTerm) GetReturnLocationOk() (*Location, bool) {
	if o == nil || IsNil(o.ReturnLocation) {
		return nil, false
	}
	return o.ReturnLocation, true
}

// HasReturnLocation returns a boolean if a field has been set.
func (o *ReturnTerm) HasReturnLocation() bool {
	if o != nil && !IsNil(o.ReturnLocation) {
		return true
	}

	return false
}

// SetReturnLocation gets a reference to the given Location and assigns it to the ReturnLocation field.
func (o *ReturnTerm) SetReturnLocation(v Location) {
	o.ReturnLocation = &v
}

// GetFulfillmentManagedBy returns the FulfillmentManagedBy field value if set, zero value otherwise.
func (o *ReturnTerm) GetFulfillmentManagedBy() string {
	if o == nil || IsNil(o.FulfillmentManagedBy) {
		var ret string
		return ret
	}
	return *o.FulfillmentManagedBy
}

// GetFulfillmentManagedByOk returns a tuple with the FulfillmentManagedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnTerm) GetFulfillmentManagedByOk() (*string, bool) {
	if o == nil || IsNil(o.FulfillmentManagedBy) {
		return nil, false
	}
	return o.FulfillmentManagedBy, true
}

// HasFulfillmentManagedBy returns a boolean if a field has been set.
func (o *ReturnTerm) HasFulfillmentManagedBy() bool {
	if o != nil && !IsNil(o.FulfillmentManagedBy) {
		return true
	}

	return false
}

// SetFulfillmentManagedBy gets a reference to the given string and assigns it to the FulfillmentManagedBy field.
func (o *ReturnTerm) SetFulfillmentManagedBy(v string) {
	o.FulfillmentManagedBy = &v
}

func (o ReturnTerm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReturnTerm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FulfillmentState) {
		toSerialize["fulfillment_state"] = o.FulfillmentState
	}
	if !IsNil(o.ReturnEligible) {
		toSerialize["return_eligible"] = o.ReturnEligible
	}
	if !IsNil(o.ReturnTime) {
		toSerialize["return_time"] = o.ReturnTime
	}
	if !IsNil(o.ReturnLocation) {
		toSerialize["return_location"] = o.ReturnLocation
	}
	if !IsNil(o.FulfillmentManagedBy) {
		toSerialize["fulfillment_managed_by"] = o.FulfillmentManagedBy
	}
	return toSerialize, nil
}

type NullableReturnTerm struct {
	value *ReturnTerm
	isSet bool
}

func (v NullableReturnTerm) Get() *ReturnTerm {
	return v.value
}

func (v *NullableReturnTerm) Set(val *ReturnTerm) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnTerm) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnTerm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnTerm(val *ReturnTerm) *NullableReturnTerm {
	return &NullableReturnTerm{value: val, isSet: true}
}

func (v NullableReturnTerm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnTerm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


