/*
Beckn Protocol Core

Beckn Core Transaction API specification

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package transaction

import (
	"encoding/json"
)

// checks if the Rating2Message type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Rating2Message{}

// Rating2Message struct for Rating2Message
type Rating2Message struct {
	Ratings []Rating `json:"ratings,omitempty"`
}

// NewRating2Message instantiates a new Rating2Message object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRating2Message() *Rating2Message {
	this := Rating2Message{}
	return &this
}

// NewRating2MessageWithDefaults instantiates a new Rating2Message object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRating2MessageWithDefaults() *Rating2Message {
	this := Rating2Message{}
	return &this
}

// GetRatings returns the Ratings field value if set, zero value otherwise.
func (o *Rating2Message) GetRatings() []Rating {
	if o == nil || IsNil(o.Ratings) {
		var ret []Rating
		return ret
	}
	return o.Ratings
}

// GetRatingsOk returns a tuple with the Ratings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Rating2Message) GetRatingsOk() ([]Rating, bool) {
	if o == nil || IsNil(o.Ratings) {
		return nil, false
	}
	return o.Ratings, true
}

// HasRatings returns a boolean if a field has been set.
func (o *Rating2Message) HasRatings() bool {
	if o != nil && !IsNil(o.Ratings) {
		return true
	}

	return false
}

// SetRatings gets a reference to the given []Rating and assigns it to the Ratings field.
func (o *Rating2Message) SetRatings(v []Rating) {
	o.Ratings = v
}

func (o Rating2Message) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Rating2Message) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ratings) {
		toSerialize["ratings"] = o.Ratings
	}
	return toSerialize, nil
}

type NullableRating2Message struct {
	value *Rating2Message
	isSet bool
}

func (v NullableRating2Message) Get() *Rating2Message {
	return v.value
}

func (v *NullableRating2Message) Set(val *Rating2Message) {
	v.value = val
	v.isSet = true
}

func (v NullableRating2Message) IsSet() bool {
	return v.isSet
}

func (v *NullableRating2Message) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRating2Message(val *Rating2Message) *NullableRating2Message {
	return &NullableRating2Message{value: val, isSet: true}
}

func (v NullableRating2Message) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRating2Message) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


